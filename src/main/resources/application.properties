spring.application.name=gfg-spring-boot
server.port = 3000
spring.h2.console.enabled=true

spring.datasource.url=jdbc:mysql://localhost:3306/testdb
spring.datasource.username=root
spring.datasource.password=new-password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.security.user.name=user
spring.security.user.password=qwerty

server.servlet.session.timeout=15m
spring.kafka.bootstrap-servers=localhost:9092

#Google OAuth2 Client Properties
#spring.security.oauth2.client.registration.google.client-id=*********
#spring.security.oauth2.client.registration.google.client-secret=************
#spring.security.oauth2.client.registration.google.scope=openid,profile,email


spring.security.oauth2.client.registration.github.client-id=**********
spring.security.oauth2.client.registration.github.client-secret=********
spring.security.oauth2.client.registration.github.scope=profile,email

resilience4j.retry.instances.default.max-attempts=3
resilience4j.retry.instances.default.wait-duration=1s
resilience4j.retry.instances.default.retry-exceptions[]=java.lang.RuntimeException

logging.level.io.github.resilience4j.circuitbreaker=DEBUG

# Default CircuitBreaker Configuration
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.failureRateThreshold=70
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=3
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.slidingWindowSize=3
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=300s
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=10

# Specify exceptions to record
resilience4j.circuitbreaker.configs.default.recordExceptions=java.lang.RuntimeException

# CircuitBreaker Instance
resilience4j.circuitbreaker.instances.webClientCircuitBreaker.baseConfig=default


resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.retry.retry-aspect-order=2

#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true


# Eureka Instance Configuration
#eureka.instance.hostname=localhost
spring.cloud.compatibility-verifier.enabled=false

